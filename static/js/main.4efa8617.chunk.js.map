{"version":3,"sources":["OpenCV.js","App.js","index.js"],"names":["cv","window","OpenCV","img","file","canvas","console","log","this","image","document","getElementById","prototype","addListener","addEventListener","loadData","bind","e","target","files","src","URL","createObjectURL","loadImageToCanvas","removeListener","removeEventListener","negativeCanvas","loadOriginalCanvas","ctx","getContext","imgData","getImageData","width","height","arr","data","i","length","putImageData","logTransform","Math","log10","flip","flipH","flipV","scaleH","scaleV","posX","posY","save","scale","drawImage","restore","contrastCanvas","value","contrast","intercept","brightnessCanvas","brightness","filter","onload","grayscale","mat","imread","cvtColor","COLOR_RGB2GRAY","imshow","delete","dst","Mat","M","eye","CV_32FC1","anchor","Point","filter2D","CV_8U","BORDER_DEFAULT","cannyEdgeDetection","Canny","blurByAveraging","ksize","Size","blur","gaussianBlur","GaussianBlur","medianBlurring","medianBlur","negative","mat_not","bitwise_not","histogram","COLOR_RGBA2GRAY","srcVec","MatVector","push_back","histSize","hist","mask","color","Scalar","calcHist","max","minMaxLoc","maxVal","zeros","rows","CV_8UC3","binVal","data32F","point1","point2","rectangle","FILLED","crop","rect","Rect","roi","action","type","App","props","handleChange","ocv","handleSlider","id","className","min","onChange","map","item","index","key","name","React","Component","ReactDOM","render"],"mappings":"4NACIA,G,MAAKC,OAAOD,IAEhB,SAASE,EAAOC,EAAKC,EAAMC,GACzBC,QAAQC,IAAIP,GACZQ,KAAKC,MAAQC,SAASC,eAAeR,GACrCK,KAAKJ,KAAOM,SAASC,eAAeP,GACpCI,KAAKH,OAASA,EAGhBH,EAAOU,UAAUC,YAAc,WAC7BL,KAAKJ,KAAKU,iBAAiB,SAAUN,KAAKO,SAASC,KAAKR,OAAO,IAGjEN,EAAOU,UAAUG,SAAW,SAASE,GAChCA,EAAEC,OAAOC,MAAM,KAChBX,KAAKC,MAAMW,IAAMC,IAAIC,gBAAgBL,EAAEC,OAAOC,MAAM,IACpDX,KAAKe,sBAITrB,EAAOU,UAAUY,eAAiB,WAChChB,KAAKJ,KAAKqB,oBAAoB,SAAUjB,KAAKO,SAASC,KAAKR,OAAO,IAOpEN,EAAOU,UAAUc,eAAiB,WAChClB,KAAKmB,qBAML,IALA,IAAItB,EAASK,SAASC,eAAe,gBACjCiB,EAAMvB,EAAOwB,WAAW,MACxBC,EAAUF,EAAIG,aAAa,EAAG,EAAG1B,EAAO2B,MAAO3B,EAAO4B,QAEtDC,EAAMJ,EAAQK,KACTC,EAAI,EAAGA,EAAIF,EAAIG,OAAQD,GAAQ,EACtCF,EAAIE,GAAK,IAAMF,EAAIE,GACnBF,EAAIE,EAAI,GAAK,IAAMF,EAAIE,EAAI,GAC3BF,EAAIE,EAAI,GAAK,IAAMF,EAAIE,EAAI,GAG7BR,EAAIU,aAAaR,EAAS,EAAG,IAG/B5B,EAAOU,UAAU2B,aAAe,WAC9B/B,KAAKmB,qBAML,IALA,IAAItB,EAASK,SAASC,eAAe,gBACjCiB,EAAMvB,EAAOwB,WAAW,MACxBC,EAAUF,EAAIG,aAAa,EAAG,EAAG1B,EAAO2B,MAAO3B,EAAO4B,QAEtDC,EAAMJ,EAAQK,KACTC,EAAI,EAAGA,EAAIF,EAAIG,OAAQD,GAAQ,EACtCF,EAAIE,GAAK,IAAMI,KAAKC,MAAMP,EAAIE,GAAK,GACnCF,EAAIE,EAAI,GAAK,IAAMI,KAAKC,MAAMP,EAAIE,EAAE,GAAK,GACzCF,EAAIE,EAAI,GAAK,IAAMI,KAAKC,MAAMP,EAAIE,EAAE,GAAK,GAG3CR,EAAIU,aAAaR,EAAS,EAAG,IAK/B5B,EAAOU,UAAU8B,KAAO,SAASC,EAAOC,GACtC,IAAIvC,EAASK,SAASC,eAAe,gBACjCiB,EAAMvB,EAAOwB,WAAW,MAExBG,GADUJ,EAAIG,aAAa,EAAG,EAAG1B,EAAO2B,MAAO3B,EAAO4B,QAC9C5B,EAAO2B,OACfC,EAAS5B,EAAO4B,OAChBY,EAASF,GAAS,EAAI,EACtBG,EAASF,GAAS,EAAI,EACtBG,EAAOJ,GAAiB,EAATX,EAAa,EAC5BgB,EAAOJ,GAAkB,EAAVX,EAAc,EAEjCL,EAAIqB,OACJrB,EAAIsB,MAAML,EAAQC,GAClBlB,EAAIuB,UAAU3C,KAAKC,MAAOsC,EAAMC,EAAMhB,EAAOC,GAC7CL,EAAIwB,WAGNlD,EAAOU,UAAUyC,eAAiB,SAASC,GACzC9C,KAAKmB,qBASL,IARA,IAAI4B,EAAWD,EACXjD,EAASK,SAASC,eAAe,gBACjCiB,EAAMvB,EAAOwB,WAAW,MACxBC,EAAUF,EAAIG,aAAa,EAAG,EAAG1B,EAAO2B,MAAO3B,EAAO4B,QAEtDC,EAAMJ,EAAQK,KAEdqB,EAAY,KAAO,GADvBD,EAAWA,EAAW,IAAM,IAEnBnB,EAAI,EAAGA,EAAIF,EAAIG,OAAQD,GAAK,EAEnCF,EAAIE,GAAKF,EAAIE,GAAKmB,EAAWC,EAC7BtB,EAAIE,EAAI,GAAKF,EAAIE,EAAI,GAAKmB,EAAWC,EACrCtB,EAAIE,EAAI,GAAKF,EAAIE,EAAI,GAAKmB,EAAWC,EAEvC5B,EAAIU,aAAaR,EAAS,EAAG,IAG/B5B,EAAOU,UAAU6C,iBAAmB,SAASC,GAC3ClD,KAAKmB,qBACL,IAAItB,EAASK,SAASC,eAAe,gBACjCiB,EAAMvB,EAAOwB,WAAW,MACxBC,EAAUF,EAAIG,aAAa,EAAG,EAAG1B,EAAO2B,MAAO3B,EAAO4B,QAC1DL,EAAI+B,OAAJ,qBAA2BD,EAA3B,MACA9B,EAAIU,aAAaR,EAAS,EAAG,IAG/B5B,EAAOU,UAAUW,kBAAoB,WACnCf,KAAKC,MAAMmD,OAAS,WAClB,IAAIvD,EAASK,SAASC,eAAe,gBAC3BN,EAAOwB,WAAW,MACxBsB,UAAU3C,KAAM,EAAG,EAAGH,EAAO2B,MAAO3B,EAAO4B,UAInD/B,EAAOU,UAAUe,mBAAqB,WACpC,IAAItB,EAASK,SAASC,eAAe,gBAC3BN,EAAOwB,WAAW,MACxBsB,UAAU3C,KAAKC,MAAO,EAAG,EAAGJ,EAAO2B,MAAO3B,EAAO4B,SAIvD/B,EAAOU,UAAUiD,UAAY,WAC3B,IAAIC,EAAM9D,EAAG+D,OAAOvD,KAAKC,OACzBT,EAAGgE,SAASF,EAAKA,EAAK9D,EAAGiE,gBACzBjE,EAAGkE,OAAO,eAAgBJ,GAC1BA,EAAIK,UAGNjE,EAAOU,UAAU+C,OAAS,WACxB,IAAIvC,EAAMpB,EAAG+D,OAAOvD,KAAKC,OACrB2D,EAAM,IAAIpE,EAAGqE,IACbC,EAAItE,EAAGqE,IAAIE,IAAI,EAAG,EAAGvE,EAAGwE,UACxBC,EAAS,IAAIzE,EAAG0E,OAAO,GAAI,GAC/B1E,EAAG2E,SAASvD,EAAKgD,EAAKpE,EAAG4E,MAAON,EAAGG,EAAQ,EAAGzE,EAAG6E,gBACjD7E,EAAGkE,OAAO,eAAgBE,GAC1BhD,EAAI+C,SACJC,EAAID,SACJG,EAAEH,UAGJjE,EAAOU,UAAUkE,mBAAqB,WACpC,IAAI1D,EAAMpB,EAAG+D,OAAOvD,KAAKC,OACrB2D,EAAM,IAAIpE,EAAGqE,IACjBrE,EAAGgE,SAAS5C,EAAKA,EAAKpB,EAAGiE,eAAgB,GAEzCjE,EAAG+E,MAAM3D,EAAKgD,EAAK,GAAI,IAAK,GAAG,GAC/BpE,EAAGkE,OAAO,eAAgBE,GAC1BhD,EAAI+C,SACJC,EAAID,UAONjE,EAAOU,UAAUoE,gBAAkB,WACjC,IAAI5D,EAAMpB,EAAG+D,OAAOvD,KAAKC,OACrB2D,EAAM,IAAIpE,EAAGqE,IACbY,EAAQ,IAAIjF,EAAGkF,KAAK,GAAI,IACxBT,EAAS,IAAIzE,EAAG0E,OAAO,GAAI,GAC/B1E,EAAGmF,KAAK/D,EAAKgD,EAAKa,EAAOR,EAAQzE,EAAG6E,gBACpC7E,EAAGkE,OAAO,eAAgBE,GAC1BhD,EAAI+C,SACJC,EAAID,UAGNjE,EAAOU,UAAUwE,aAAe,WAC9B,IAAIhE,EAAMpB,EAAG+D,OAAOvD,KAAKC,OACrB2D,EAAM,IAAIpE,EAAGqE,IACbY,EAAQ,IAAIjF,EAAGkF,KAAK,EAAG,GAC3BlF,EAAGqF,aAAajE,EAAKgD,EAAKa,EAAO,EAAG,EAAGjF,EAAG6E,gBAC1C7E,EAAGkE,OAAO,eAAgBE,GAC1BhD,EAAI+C,SACJC,EAAID,UAGNjE,EAAOU,UAAU0E,eAAiB,WAChC,IAAIlE,EAAMpB,EAAG+D,OAAOvD,KAAKC,OACrB2D,EAAM,IAAIpE,EAAGqE,IACjBrE,EAAGuF,WAAWnE,EAAKgD,EAAK,GACxBpE,EAAGkE,OAAO,eAAgBE,GAC1BhD,EAAI+C,SACJC,EAAID,UAGNjE,EAAOU,UAAU4E,SAAW,WAC1B,IAAI1B,EAAM9D,EAAG+D,OAAOvD,KAAKC,OACrBgF,EAAU,IAAIzF,EAAGqE,IACrBrE,EAAG0F,YAAY5B,EAAK2B,GACpBzF,EAAGkE,OAAO,eAAgBuB,GAC1B3B,EAAIK,SACJsB,EAAQtB,UAGVjE,EAAOU,UAAU+E,UAAY,WAC3B,IAAIvE,EAAMpB,EAAG+D,OAAOvD,KAAKC,OACzBT,EAAGgE,SAAS5C,EAAKA,EAAKpB,EAAG4F,gBAAiB,GAC1C,IAAIC,EAAS,IAAI7F,EAAG8F,UACpBD,EAAOE,UAAU3E,GACjB,IAEI4E,EAAW,CAAC,KAEZC,EAAO,IAAIjG,EAAGqE,IACd6B,EAAO,IAAIlG,EAAGqE,IACd8B,EAAQ,IAAInG,EAAGoG,OAAO,IAAK,IAAK,KAGpCpG,EAAGqG,SAASR,EARG,CAAC,GAQcK,EAAMD,EAAMD,EAN7B,CAAC,EAAG,MAHA,GAcjB,IAJA,IACIM,EADStG,EAAGuG,UAAUN,EAAMC,GACfM,OACbpC,EAAM,IAAIpE,EAAGqE,IAAIoC,MAAMrF,EAAIsF,KALnB,EAKyBV,EAAS,GAAYhG,EAAG2G,SAEpDvE,EAAI,EAAGA,EAAI4D,EAAS,GAAI5D,IAAK,CACpC,IAAIwE,EAAUX,EAAKY,QAAQzE,GAAKhB,EAAIsF,KAAQJ,EACxCQ,EAAS,IAAI9G,EAAG0E,MATV,EASgBtC,EAAWhB,EAAIsF,KAAO,GAC5CK,EAAS,IAAI/G,EAAG0E,MAVV,GAUiBtC,EAAI,GAAa,EAAGhB,EAAIsF,KAAOE,GAC1D5G,EAAGgH,UAAU5C,EAAK0C,EAAQC,EAAQZ,EAAOnG,EAAGiH,QAE9CjH,EAAGkE,OAAO,eAAgBE,GAC1BhD,EAAI+C,SACJC,EAAID,SACJ0B,EAAO1B,SACP+B,EAAK/B,SACL8B,EAAK9B,UAGPjE,EAAOU,UAAUsG,KAAO,WACtB,IAAI9F,EAAMpB,EAAG+D,OAAOvD,KAAKC,OACrB2D,EAAM,IAAIpE,EAAGqE,IACb8C,EAAO,IAAInH,EAAGoH,KAAK,GAAI,GAAI,IAAK,KACpChD,EAAMhD,EAAIiG,IAAIF,GACdnH,EAAGkE,OAAO,eAAgBE,GAC1BhD,EAAI+C,SACJC,EAAID,UAKNjE,EAAOU,UAAU0G,OAAS,SAASC,EAAMjE,GACvC,GAAqB,IAAlB9C,KAAKC,MAAMW,IAGd,OAAQmG,GACN,IAAK,WACH/G,KAAKmB,qBACL,MACF,IAAK,YACHnB,KAAKqD,YACL,MACF,IAAK,cACHrD,KAAK8E,iBACL,MACF,IAAK,gBACH9E,KAAK4E,eACL,MACF,IAAK,kBACH5E,KAAKwE,kBACL,MAEF,IAAK,uBACHxE,KAAKsE,qBACL,MACF,IAAK,YACHtE,KAAKmF,YACL,MACF,IAAK,SACHnF,KAAKmD,SACL,MACF,IAAK,OACHnD,KAAK0G,OACL,MACF,IAAK,WACH1G,KAAKkB,iBACL,MACF,IAAK,WACHlB,KAAK6C,eAAeC,GACpB,MACF,IAAK,sBACH9C,KAAK+B,eACL,MACF,IAAK,aACH/B,KAAKiD,iBAAiBH,GACtB,MACF,IAAK,kBAGL,IAAK,SACH9C,KAAKkC,MAAK,GAAK,GACf,MACF,IAAK,gBACDlC,KAAKkC,MAAK,GAAM,GAChB,MACJ,IAAK,+BACDlC,KAAKkC,MAAK,GAAK,KAORxC,QCzSToH,EAAS,CACb,WACA,YACA,uBACA,SACA,WACA,cACA,gBACA,kBACA,YACA,SACA,OACA,sBAEA,kBACA,gBACA,gCA6FaE,E,YAzFb,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAYRC,aAAe,SAAAzG,GAEb,EAAK0G,IAAIL,OAAOrG,EAAEC,OAAOoC,QAfR,EAkBnBsE,aAAe,SAAC3G,EAAGsG,GACjBjH,QAAQC,IAAIU,EAAEC,OAAOoC,MAAOiE,GAC5B,EAAKI,IAAIL,OAAOC,EAAMtG,EAAEC,OAAOoC,QApBd,E,iFAKjB9C,KAAKmH,IAAM,IAAIzH,EAAO,cAAe,aAAc,gBACnDM,KAAKmH,IAAI9G,gB,6CAITL,KAAKmH,IAAInG,mB,+BAYD,IAAD,OACP,OACE,yBAAKqG,GAAG,iBACN,yBAAKC,UAAU,gBACb,yBAAKD,GAAG,gBACR,2BAAON,KAAK,OAAOM,GAAG,gBAGxB,yBAAKC,UAAU,iBACb,yBAAKA,UAAU,UACb,4BAAQD,GAAG,iBACX,6BACE,6CACA,2BACEN,KAAK,QACLQ,IAAI,IACJzB,IAAI,MACJwB,UAAU,SACVD,GAAG,UACHG,SAAU,SAAA/G,GAAC,OAAI,EAAK2G,aAAa3G,EAAG,kBAGxC,6BACE,2CACA,2BACEsG,KAAK,QACLQ,IAAI,OACJzB,IAAI,MACJwB,UAAU,SACVD,GAAG,UACHG,SAAU,SAAA/G,GAAC,OAAI,EAAK2G,aAAa3G,EAAG,iBAe1C,yBAAK6G,UAAU,oBACb,gDACA,yBAAKA,UAAU,eACZR,EAAOW,IAAI,SAACC,EAAMC,GAAP,OACV,yBAAKC,IAAKD,GACR,2BACEZ,KAAK,QACLc,KAAK,SACL/E,MAAO4E,EACPF,SAAU,EAAKN,eAEjB,+BAAQQ,c,GA/ERI,IAAMC,WCrBxBC,IAASC,OAAO,kBAAC,EAAD,MAAS/H,SAASC,eAAe,U","file":"static/js/main.4efa8617.chunk.js","sourcesContent":["// console.log(cv)\nlet cv = window.cv;\n\nfunction OpenCV(img, file, canvas) {\n  console.log(cv);\n  this.image = document.getElementById(img);\n  this.file = document.getElementById(file);\n  this.canvas = canvas;\n}\n\nOpenCV.prototype.addListener = function() {\n  this.file.addEventListener(\"change\", this.loadData.bind(this), false);\n};\n\nOpenCV.prototype.loadData = function(e) {\n  if(e.target.files[0]){\n    this.image.src = URL.createObjectURL(e.target.files[0]);\n    this.loadImageToCanvas();\n  }\n};\n\nOpenCV.prototype.removeListener = function() {\n  this.file.removeEventListener(\"change\", this.loadData.bind(this), false);\n};\n\n// image enhancement and restoration\n\n//canvas techniques\n\nOpenCV.prototype.negativeCanvas = function() {\n  this.loadOriginalCanvas()\n  let canvas = document.getElementById(\"image_canvas\");\n  let ctx = canvas.getContext(\"2d\");\n  let imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n\n  let arr = imgData.data;\n  for (let i = 0; i < arr.length; i = i + 4) {\n    arr[i] = 255 - arr[i]; //red\n    arr[i + 1] = 255 - arr[i + 1]; //green\n    arr[i + 2] = 255 - arr[i + 2]; //blue\n  }\n  // imgData.data = arr;\n  ctx.putImageData(imgData, 0, 0);\n};\n\nOpenCV.prototype.logTransform = function() {\n  this.loadOriginalCanvas()\n  let canvas = document.getElementById(\"image_canvas\");\n  let ctx = canvas.getContext(\"2d\");\n  let imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n\n  let arr = imgData.data;\n  for (let i = 0; i < arr.length; i = i + 4) {\n    arr[i] = 200 * Math.log10(arr[i] + 1); //red\n    arr[i + 1] = 200 * Math.log10(arr[i+1] + 1); //green\n    arr[i + 2] = 200 * Math.log10(arr[i+2] + 1); //blue\n  }\n  // imgData.data = arr;\n  ctx.putImageData(imgData, 0, 0);\n};\n\n\n\nOpenCV.prototype.flip = function(flipH, flipV){\n  let canvas = document.getElementById(\"image_canvas\");\n  let ctx = canvas.getContext(\"2d\");\n  let imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n  let width = canvas.width;\n  let height = canvas.height\n  let scaleH = flipH ? -1 : 1 // Set horizontal scale to -1 if flip horizontal\n  let scaleV = flipV ? -1 : 1 // Set verical scale to -1 if flip vertical\n  let posX = flipH ? width * -1 : 0 // Set x position to -100% if flip horizontal \n  let posY = flipV ? height * -1 : 0 // Set y position to -100% if flip vertical\n    \n  ctx.save(); // Save the current state\n  ctx.scale(scaleH, scaleV); // Set scale to flip the image\n  ctx.drawImage(this.image, posX, posY, width, height); // draw the image\n  ctx.restore(); // Restore the last saved state\n}\n\nOpenCV.prototype.contrastCanvas = function(value) {\n  this.loadOriginalCanvas()\n  let contrast = value\n  let canvas = document.getElementById(\"image_canvas\");\n  let ctx = canvas.getContext(\"2d\");\n  let imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n\n  let arr = imgData.data;\n  contrast = contrast / 100 + 1; //convert to decimal & shift range: [0..2]\n  let intercept = 128 * (1 - contrast);\n  for (let i = 0; i < arr.length; i += 4) {\n    //r,g,b,a\n    arr[i] = arr[i] * contrast + intercept;\n    arr[i + 1] = arr[i + 1] * contrast + intercept;\n    arr[i + 2] = arr[i + 2] * contrast + intercept;\n  }\n  ctx.putImageData(imgData, 0, 0);\n};\n\nOpenCV.prototype.brightnessCanvas = function(brightness) {\n  this.loadOriginalCanvas()\n  let canvas = document.getElementById(\"image_canvas\");\n  let ctx = canvas.getContext(\"2d\");\n  let imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n  ctx.filter = `brightness(${brightness}%)`\n  ctx.putImageData(imgData, 0, 0);\n};\n\nOpenCV.prototype.loadImageToCanvas = function() {\n  this.image.onload = function() {\n    let canvas = document.getElementById(\"image_canvas\");\n    let ctx = canvas.getContext(\"2d\");\n    ctx.drawImage(this, 0, 0, canvas.width, canvas.height);\n  };\n};\n\nOpenCV.prototype.loadOriginalCanvas = function(){\n  let canvas = document.getElementById(\"image_canvas\");\n  let ctx = canvas.getContext(\"2d\");\n  ctx.drawImage(this.image, 0, 0, canvas.width, canvas.height);\n}\n\n// convert image to grayscale\nOpenCV.prototype.grayscale = function() {\n  let mat = cv.imread(this.image);\n  cv.cvtColor(mat, mat, cv.COLOR_RGB2GRAY);\n  cv.imshow(\"image_canvas\", mat);\n  mat.delete();\n};\n\nOpenCV.prototype.filter = function() {\n  let src = cv.imread(this.image);\n  let dst = new cv.Mat();\n  let M = cv.Mat.eye(3, 3, cv.CV_32FC1);\n  let anchor = new cv.Point(-1, -1);\n  cv.filter2D(src, dst, cv.CV_8U, M, anchor, 0, cv.BORDER_DEFAULT);\n  cv.imshow(\"image_canvas\", dst);\n  src.delete();\n  dst.delete();\n  M.delete();\n};\n\nOpenCV.prototype.cannyEdgeDetection = function() {\n  let src = cv.imread(this.image);\n  let dst = new cv.Mat();\n  cv.cvtColor(src, src, cv.COLOR_RGB2GRAY, 0);\n  // You can try more different parameters\n  cv.Canny(src, dst, 50, 100, 3, false);\n  cv.imshow(\"image_canvas\", dst);\n  src.delete();\n  dst.delete();\n};\n\n// OpenCV.prototype.blur = function(type) {\n\n// }\n\nOpenCV.prototype.blurByAveraging = function() {\n  let src = cv.imread(this.image);\n  let dst = new cv.Mat();\n  let ksize = new cv.Size(10, 10);\n  let anchor = new cv.Point(-1, -1);\n  cv.blur(src, dst, ksize, anchor, cv.BORDER_DEFAULT);\n  cv.imshow(\"image_canvas\", dst);\n  src.delete();\n  dst.delete();\n};\n\nOpenCV.prototype.gaussianBlur = function() {\n  let src = cv.imread(this.image);\n  let dst = new cv.Mat();\n  let ksize = new cv.Size(3, 3);\n  cv.GaussianBlur(src, dst, ksize, 0, 0, cv.BORDER_DEFAULT);\n  cv.imshow(\"image_canvas\", dst);\n  src.delete();\n  dst.delete();\n};\n\nOpenCV.prototype.medianBlurring = function() {\n  let src = cv.imread(this.image);\n  let dst = new cv.Mat();\n  cv.medianBlur(src, dst, 5);\n  cv.imshow(\"image_canvas\", dst);\n  src.delete();\n  dst.delete();\n};\n\nOpenCV.prototype.negative = function() {\n  let mat = cv.imread(this.image);\n  let mat_not = new cv.Mat();\n  cv.bitwise_not(mat, mat_not);\n  cv.imshow(\"image_canvas\", mat_not);\n  mat.delete();\n  mat_not.delete();\n};\n\nOpenCV.prototype.histogram = function() {\n  let src = cv.imread(this.image);\n  cv.cvtColor(src, src, cv.COLOR_RGBA2GRAY, 0);\n  let srcVec = new cv.MatVector();\n  srcVec.push_back(src);\n  let accumulate = false;\n  let channels = [0];\n  let histSize = [256];\n  let ranges = [0, 255];\n  let hist = new cv.Mat();\n  let mask = new cv.Mat();\n  let color = new cv.Scalar(255, 255, 255);\n  let scale = 2;\n  // You can try more different parameters\n  cv.calcHist(srcVec, channels, mask, hist, histSize, ranges, accumulate);\n  let result = cv.minMaxLoc(hist, mask);\n  let max = result.maxVal;\n  let dst = new cv.Mat.zeros(src.rows, histSize[0] * scale, cv.CV_8UC3);\n  // draw histogram\n  for (let i = 0; i < histSize[0]; i++) {\n    let binVal = (hist.data32F[i] * src.rows) / max;\n    let point1 = new cv.Point(i * scale, src.rows - 1);\n    let point2 = new cv.Point((i + 1) * scale - 1, src.rows - binVal);\n    cv.rectangle(dst, point1, point2, color, cv.FILLED);\n  }\n  cv.imshow(\"image_canvas\", dst);\n  src.delete();\n  dst.delete();\n  srcVec.delete();\n  mask.delete();\n  hist.delete();\n};\n\nOpenCV.prototype.crop = function() {\n  let src = cv.imread(this.image);\n  let dst = new cv.Mat();\n  let rect = new cv.Rect(80, 80, 100, 100);\n  dst = src.roi(rect);\n  cv.imshow(\"image_canvas\", dst);\n  src.delete();\n  dst.delete();\n};\n\n\n\nOpenCV.prototype.action = function(type, value) {\n  if(this.image.src == \"\"){\n    return\n  }\n  switch (type) {\n    case \"Original\":\n      this.loadOriginalCanvas();\n      break\n    case \"Grayscale\":\n      this.grayscale();\n      break;\n    case \"Median Blur\":\n      this.medianBlurring();\n      break;\n    case \"Gaussian Blur\":\n      this.gaussianBlur();\n      break;\n    case \"Blur By Average\":\n      this.blurByAveraging();\n      break;\n\n    case \"Canny Edge Detection\":\n      this.cannyEdgeDetection();\n      break;\n    case \"Histogram\":\n      this.histogram();\n      break;\n    case \"Filter\":\n      this.filter();\n      break;\n    case \"Crop\":\n      this.crop();\n      break;\n    case \"Negative\":\n      this.negativeCanvas();\n      break;\n    case \"Contrast\":\n      this.contrastCanvas(value);\n      break\n    case \"Logarithm Transform\":;\n      this.logTransform();\n      break\n    case \"Brightness\":\n      this.brightnessCanvas(value)\n      break\n    case \"Flip Horizontal\":\n      this.flip(true,false)\n      break\n    case \"Mirror\":\n      this.flip(true,false)\n      break\n    case \"Flip Vertical\":\n        this.flip(false,true)\n        break\n    case \"Flip Horizontal and Vertical\":\n        this.flip(true,true)\n        break\n    default:\n      break;\n  }\n};\n\nexport default OpenCV","import React from \"react\";\nimport \"./app.sass\";\nimport OpenCV from \"./OpenCV\";\n\n//convert image to negative\n\nconst action = [\n  \"Original\",\n  \"Grayscale\",\n  \"Canny Edge Detection\",\n  \"Filter\",\n  \"Negative\",\n  \"Median Blur\",\n  \"Gaussian Blur\",\n  \"Blur By Average\",\n  \"Histogram\",\n  \"Mirror\",\n  \"Crop\",\n  \"Logarithm Transform\",\n  // \"Power Transform\",\n  \"Flip Horizontal\",\n  \"Flip Vertical\",\n  \"Flip Horizontal and Vertical\"\n];\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this.ocv = new OpenCV(\"image_input\", \"file_input\", \"image_canvas\");\n    this.ocv.addListener();\n  }\n\n  componentWillUnmount() {\n    this.ocv.removeListener();\n  }\n\n  handleChange = e => {\n    // console.log(e.target.value)\n    this.ocv.action(e.target.value);\n  };\n\n  handleSlider = (e, type) => {\n    console.log(e.target.value, type);\n    this.ocv.action(type, e.target.value);\n  };\n  render() {\n    return (\n      <div id=\"app_container\">\n        <div className=\"image_closet\">\n          <img id=\"image_input\" />\n          <input type=\"file\" id=\"file_input\" />\n        </div>\n\n        <div className=\"canvas_ground\">\n          <div className=\"canvas\">\n            <canvas id=\"image_canvas\"></canvas>\n            <div>\n              <label>Brightness</label>\n              <input\n                type=\"range\"\n                min=\"0\"\n                max=\"300\"\n                className=\"slider\"\n                id=\"myRange\"\n                onChange={e => this.handleSlider(e, \"Brightness\")}\n              />\n            </div>\n            <div>\n              <label>Contrast</label>\n              <input\n                type=\"range\"\n                min=\"-100\"\n                max=\"100\"\n                className=\"slider\"\n                id=\"myRange\"\n                onChange={e => this.handleSlider(e, \"Contrast\")}\n              />\n            </div>\n            {/* <div>\n              <label>Zoom</label>\n              <input\n                type=\"range\"\n                min=\"0\"\n                max=\"10\"\n                className=\"slider\"\n                id=\"myRange\"\n                onChange={e => this.handleSlider(e, \"Zoom\")}\n              />\n            </div> */}\n          </div>\n          <div className=\"image_processing\">\n            <h1>Image Processing</h1>\n            <div className=\"action_menu\">\n              {action.map((item, index) => (\n                <div key={index}>\n                  <input\n                    type=\"radio\"\n                    name=\"action\"\n                    value={item}\n                    onChange={this.handleChange}\n                  />\n                  <label>{item}</label>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}